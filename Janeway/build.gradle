import org.apache.tools.ant.taskdefs.condition.Os

//Settings for Janeway related to modules and creating the distribution
def modulesList = ['DefectTracker', 'RequirementManager', 'PostBoard', 'TaskManager']
def modulesDir = 'modules'
def modulesConf = 'modules.conf'
def libsDir = 'libs'

apply plugin: 'application'

mainClassName = "edu.wpi.cs.wpisuitetng.janeway.Janeway"
//applicationDefaultJvmArgs = ["-Dgreeting.language=en"]

//Janeway depends on it's modules, look at the modules first
modulesList.each {
    evaluationDependsOn(":${it}")
}

dependencies{
	compile 'com.lowagie:itext:2.1.5'
	compile 'org.swinglabs.swingx:swingx-all:1.6.4'
	compile 'org.jfree:jfreechart:1.0.14'
	compile 'org.jfree:jcommon:1.0.17'
	compile 'com.miglayout:miglayout-swing:4.1' //Used to be 4.0, will this cause issues?
	
    //Core projects
	compile project(':JanewayAPI')
    compile project(':WPISuite-Interfaces')
    compile project(':Network')
	
    //We depend on each modules
    modulesList.each {
        runtime project(":${it}")
    }
}

//Workaround so that Eclipse knows how to run the Gradle tasks 'modules' in order to prepare modules. 'modules' is dependency for running Janeway
//TODO Pretty sure there is a better way of doing this
eclipse{
    project{
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            buildCommand 'org.eclipse.ui.externaltools.ExternalToolBuilder', LaunchConfigHandle: '<project>/.externalToolBuilders/Gradle - Prepare Modules - Windows.launch'
        } else {
            buildCommand 'org.eclipse.ui.externaltools.ExternalToolBuilder', LaunchConfigHandle: '<project>/.externalToolBuilders/Gradle - Prepare Modules - Unix.launch'
        }
    }
}

//Add the dependencies to the .jar manifest
jar {
    manifest{
        attributes('Class-Path': configurations.runtime.files.collect {
            //Don't include the modules in the manifest, we're including them in the modules folder
            if(!modulesList.contains(it.name.minus(".jar"))) 
            {"${libsDir}/${it.name}"}}.join(' ') )
        attributes('Main-Class': "${mainClassName}")
    }
}

//Remove the default distribution tasks, since Janeway requires more complicated configuration
tasks.removeAll([distZip, distTar, installApp, startScripts])

/**
 * Custom Gradle tasks to prepare the Janeway modules, and create a distribution. Equivalent to Ant targets
 */

task modules(type: Copy) {
	description = "Copy over each module .jar file for Janeway into the modules folder"
	group = "Application"
	
    modulesList.each{
        dependsOn ":${it}:jar"
    
        from(project(":${it}").libsDir) {
            include '*.jar'
        }
        into modulesDir
    }
}

task distribution(type: Zip){
	description = "Create a .zip distribution for Janeway"
	group = "Application"
	
	archiveName = "${project.name}.zip"
	
    //Main jar
    from(jar){
        into "${project.name}"
    }
    
    //Libraries
    from(configurations.runtime){
        into "${project.name}/${libsDir}"
        //Exclude modules
        modulesList.each{
            excludes.add("${it}.jar")
        }
    }
    
    //Modules
    from(modules) {
        into "${project.name}/${modulesDir}"
        
    }
    
    //Module configuration file
    from(modulesConf){
        into "${project.name}"
    }
}

